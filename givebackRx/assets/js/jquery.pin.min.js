/*
 * Project: Pin
 * Description: Plugin for pin input, each digit is entered into individual input boxes
 * Author: https://github.com/sandy0201
 * License: MIT
 * Version: 0.0.1
 * Dependancies: jquery-1.*
 * Date: 15/06/2017
 */
!function(e,t,s,i){"use strict";function n(e,t){if(this.element=e,this.settings=r,this._defaults=r,this._name=a,t!==i&&null!==t){for(var s in r)if("object"!=typeof r[s])t[s]!==i&&(this.settings[s]=t[s]);else if(r[s]!==i)for(var n in r[s])t[s]!==i&&t[s][n]!==i&&(this.settings[s][n]=t[s][n]);for(var s in t)if("object"==typeof t[s])for(var n in t[s])this.settings[s][n]===i&&(this.settings[s][n]=t[s][n])}this.init()}var a="pin",r={messages:{valid:"Valid!",required:"This field cannot be empty",numeric:"This field requires a numeric value, no letters or special characters",sequential:"This field cannot be sequential, e.g. 1234",repeat:"This field cannot contain the same values only, e.g. 1111"},count:4,displayMessage:{},isPassword:!1,showvValidErrorMessage:!0,allowSequential:!0,allowRepeat:!0};e.extend(n.prototype,{init:function(t){t=t||!1;var s=this;if(0===e(s.element).children().length&&s.settings!==i&&null!==s.settings)for(var n=0;n<s.settings.count;n++)s.settings.isPassword&&s.settings.showvValidErrorMessage?e(s.element).append('<input type="password" name="pin_'+n+'" data-vvalid="numeric|min:1|max:1" maxlength="1" />'):s.settings.isPassword?e(s.element).append('<input type="password" name="pin_'+n+'" data-vvalid="numeric|min:1|max:1" data-vvalid-error-text="false" maxlength="1" />'):s.settings.showvValidErrorMessage?e(s.element).append('<input type="number" name="pin_'+n+'" data-vvalid="numeric|min:1|max:1" maxlength="1" />'):e(s.element).append('<input type="number" name="pin_'+n+'" data-vvalid="numeric|min:1|max:1" data-vvalid-error-text="false" maxlength="1" />');return s.isNotAForm(s.element,t)},isNotAForm:function(t,s){var i=this,n=[];if(e.each(e(t).children(),function(){n.push(this),i.focus(this)}),s){var a=i.validate(n);return e.each(n,function(){a.valid?e(this).removeClass("error"):e(this).addClass("error")}),e(i.settings.displayMessage).html(a.message),a.valid}},focus:function(t){e(t).on("click",function(){e(t).val("")}),e(t).on("keypress",function(){setTimeout(function(){e(t).next().focus().val("")},10)})},validate:function(t){var s=this,i=0,n=[];if(e.each(t,function(){n.push(parseInt(e(this).val())),""===e(this).val()&&i++}),i===n.length)return{valid:!1,message:s.settings.messages.required};for(var a=0;a<n.length;a++)if(isNaN(parseInt(n[a])))return{valid:!1,message:s.settings.messages.numeric};return s.settings.allowSequential||s.sequential(n)?s.settings.allowRepeat||s.repeat(n)?{valid:!0,message:s.settings.messages.valid}:{valid:!1,message:s.settings.messages.repeat}:{valid:!1,message:s.settings.messages.sequential}},sequential:function(e){for(var t=[],s=0;s<e.length;s++)t.push(e[0]+s);return JSON.stringify(e)!==JSON.stringify(t)},repeat:function(t){for(var s=[],i=0;i<t.length;i++)i>0&&(t[0]===t[i]?s.push(!0):s.push(!1));return e.inArray(!1,s)!==-1}}),e.fn[a]=function(t){return this.each(function(){e.data(this,"plugin_"+a)||e.data(this,"plugin_"+a,new n(this,t))})},e.extend(e.pin,{destroy:function(){delete this.validate}})}(jQuery,window,document);


/*----- Pin Code -----*/
$.noConflict();
jQuery(document).ready(function ($) {
	$('[data-pin]').pin({
		displayMessage: $('.message'),
		allowSequential: false,
		allowRepeat: false,
		count: 6
	});
	
	$('[name="next"]').on('click', function (e) {
		e.preventDefault();
		$('[data-pin').data('plugin_pin').init(true);
	});
});